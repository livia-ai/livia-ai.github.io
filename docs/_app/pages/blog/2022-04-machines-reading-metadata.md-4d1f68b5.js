import{S as Zt,i as ea,s as ta,C as _t,w as aa,x as ra,y as oa,z as ia,A as Yt,q as sa,o as na,B as la,O as Jt,e as s,t as r,k as m,c as n,a as l,h as o,d as t,m as d,b as u,N as ha,f as Qt,g as h,J as a}from"../../chunks/vendor-b56f9969.js";import{P as ca}from"../../chunks/_post-749b8f63.js";function ua(C){let c,y,b,p,f,w,F,Ee,N,Ie,Te,se,g,Se,D,Me,Pe,ee,je,Be,te,Re,Oe,P,We,ze,ne,U,Le,le,I,qe,ae,$e,Ce,he,_,Fe,re,Ne,De,oe,Ue,Ge,ce,T,He,j,Ke,Ye,ue,G,Je,fe,H,Qe,me,v,Ve,B,Xe,Ze,R,et,tt,O,at,rt,de,K,ot,pe,Y,it,we,k,st,W,nt,lt,ie,ht,ct,ge,J,ut,ve,x,ft,z,mt,dt,L,pt,wt,ye,S,gt,q,vt,yt,be,E,kt,_e,$,bt;return{c(){c=s("h1"),y=r("Machines Reading Metadata"),b=m(),p=s("p"),f=r("It\u2019s time for the first update from the tech team! The tech team, that\u2019s us: intern "),w=s("a"),F=r("Bernhard"),Ee=r(", student of Artificial Intelligence at the University of Linz, and me, "),N=s("a"),Ie=r("Rainer"),Te=r(", Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology."),se=m(),g=s("p"),Se=r("As we explained in our "),D=s("a"),Me=r("introductory post"),Pe=r(", one of the goals of LiviaAI is to explore whether we can teach computers to recognize \u201Csimilarity\u201D of artworks. Why? For two reasons: first, because this will allow museums in the future to "),ee=s("strong"),je=r("connect their collections to those of other museums more easily"),Be=r(". Computers can handle most of the tedious, time-consuming work of sorting through thousands of artworks, and finding relevant related material in other museums, thus saving museum curators many hours of their valuable time. Second, we believe that these new connections will enable "),te=s("strong"),Re=r("new forms of online museum experiences that cross institutional boundaries"),Oe=r(". Interested in the "),P=s("a"),We=r("Wiener Moderne"),ze=r("? Then why stay within the confines of just one or two famous museums, when other, smaller, museums might house some lesser known treasures, too?"),ne=m(),U=s("h2"),Le=r("Similar or Not?"),le=m(),I=s("p"),qe=r("The big question is, of course: what "),ae=s("em"),$e=r("does"),Ce=r(" make two artworks similar? And how do we even get enough of the right data to teach a machine to mimic our understanding of similarity? Previous approaches have been looking, for example, at similar colours. Or they used artificial intelligence to detect common objects in the artworks. But would you necessarily consider two artworks similar just because they both use yellow as their primary color? Or because they both depict flowers?"),he=m(),_=s("p"),Fe=r("In LiviaAI, we want to take a different approach. Instead of coming up with our own metrics for similarity, or relying on technical properties like color, we want to leverage the existing knowledge that museum curators have accumulated in their collections over many years. In order to teach computers how to recognize similar "),re=s("em"),Ne=r("images"),De=r(", we first want to understand how curators have been describing them - and search for similarity in these "),oe=s("em"),Ue=r("descriptions"),Ge=r("."),ce=m(),T=s("p"),He=r("Once we have identified artworks that are described in similar terms, we will use the images as examples to train the algorithm. This is also called "),j=s("a"),Ke=r("representation or feature learning"),Ye=r(", because the algorithm learns - by itself - how the representation of similiarity manifests itself in the images."),ue=m(),G=s("h2"),Je=r("Understanding Our Partner Collections"),fe=m(),H=s("p"),Qe=r("The first step in our journey is therefore to gain an understanding of our partner collections. What\u2019s actually inside them? What information have curators added to the items as metadata? And how can we translate all this existing knowledge (and years of work!) into data that can teach computers to recognize similar art?"),me=m(),v=s("p"),Ve=r("Our three partners, the "),B=s("a"),Xe=r("Belvedere"),Ze=r(", the "),R=s("a"),et=r("MAK"),tt=r(" and the "),O=s("a"),at=r("Wien Museum"),rt=r(" have given us access to metadata for all artworks they display in their public online collections. In total, that\u2019s more than 300.000 objects! The metadata includes a mix of information such as: title and description text, subjects keywords and classification terms, artist names, summary information on provenance or exhibition history, information about material, production, places and time periods relevant to the artwork, etc."),de=m(),K=s("p"),ot=r("Each partner uses different documentation practices, and has different priorities when describing their artworks. Properties that are recorded in the MAK collection, for example, may not exist (or be relevant!) in the Belvedere collection. Therefore, figuring out which artworks might be similar - according to what the curators tell us about them in the metadata - is not quite straightforward."),pe=m(),Y=s("h2"),it=r("Reading Metadata - From a Distance"),we=m(),k=s("p"),st=r("Luckily, AI can help us here, too. In LiviaAI, we use a technique called "),W=s("a"),nt=r("Sentence Embedding"),lt=r(" to get a better picture of the structure, themes and topics of our collections. Sentence Embedding is a computational method that transforms written text - such as a sentence or a paragraph - to a "),ie=s("em"),ht=r("vector"),ct=r(", a numeric representation that we can treat as a point in space. Sentences that share similar semantics will be located nearby in that vector space, which means we can deduct information about the similarity of two texts simply by measuring the distance between their point representations."),ge=m(),J=s("p"),ut=r("There are different algorithms for creating embeddings. Some start on a blank canvas, meaning there are no pre-trained assumptions about the data. You hand them your dataset (say, the entire text of a novel), and the algorithm will organize the sentences into the vector space so that sentences that use (or are surrounded by) similar vocabulary are closer together."),ve=m(),x=s("p"),ft=r("Other algorithms come with pre-loaded information. In our case, we use "),z=s("a"),mt=r("BERT"),dt=r(" an AI language model developed in 2018 by Google researchers, which was subsequently adapted for the purpose of high-performance "),L=s("a"),pt=r("sentence embedding"),wt=r(". The advantage of using a pre-trained language model is that it already carries a large amount of latent knowledge about how words and concepts relate in a language. In simplified terms, the model already encodes the information that a \u201Cpair of boots\u201D is closer in meaning to a \u201Cpair of sneakers\u201D than  \u201Cpair of pants\u201D. It would place \u201Cdrawing\u201D at a certain distance from \u201Cphotograph\u201D. But \u201Cdrawing of a person\u201D might be closer \u201Cphotograph of a person\u201D than \u201Cdrawing\u201D and \u201Cphotograph\u201D alone."),ye=m(),S=s("p"),gt=r("The idea of using sentence embeddings to organize our metdata first, and then pick training images from the results, was what triggered us to propose the LiviaAI project in the first place. It was tested successfully "),q=s("a"),vt=r("in a different context, and with a slightly different approach by AIT colleague Alexander Schindler and colleagues"),yt=r(". Which means we\u2026 sort of\u2026 know it will work. But it all depends significantly on the data - it\u2019s level of detail, how much information each individual record contains, whether curators have used free text vs keywords, whether individual records differ sufficiently or whether information is often sparse and formulaic or repetitive, etc."),be=m(),E=s("iframe"),_e=m(),$=s("span"),bt=r("Fig. 2. Sentence embeddings for 6,200 metadata records from the online collection of the Wien Museum, projected to 3 dimensions. Color represents a distinct combination of classifications assigned by the curators."),this.h()},l(e){c=n(e,"H1",{});var i=l(c);y=o(i,"Machines Reading Metadata"),i.forEach(t),b=d(e),p=n(e,"P",{});var Q=l(p);f=o(Q,"It\u2019s time for the first update from the tech team! The tech team, that\u2019s us: intern "),w=n(Q,"A",{href:!0});var xt=l(w);F=o(xt,"Bernhard"),xt.forEach(t),Ee=o(Q,", student of Artificial Intelligence at the University of Linz, and me, "),N=n(Q,"A",{href:!0});var At=l(N);Ie=o(At,"Rainer"),At.forEach(t),Te=o(Q,", Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology."),Q.forEach(t),se=d(e),g=n(e,"P",{});var A=l(g);Se=o(A,"As we explained in our "),D=n(A,"A",{href:!0});var Et=l(D);Me=o(Et,"introductory post"),Et.forEach(t),Pe=o(A,", one of the goals of LiviaAI is to explore whether we can teach computers to recognize \u201Csimilarity\u201D of artworks. Why? For two reasons: first, because this will allow museums in the future to "),ee=n(A,"STRONG",{});var It=l(ee);je=o(It,"connect their collections to those of other museums more easily"),It.forEach(t),Be=o(A,". Computers can handle most of the tedious, time-consuming work of sorting through thousands of artworks, and finding relevant related material in other museums, thus saving museum curators many hours of their valuable time. Second, we believe that these new connections will enable "),te=n(A,"STRONG",{});var Tt=l(te);Re=o(Tt,"new forms of online museum experiences that cross institutional boundaries"),Tt.forEach(t),Oe=o(A,". Interested in the "),P=n(A,"A",{href:!0,rel:!0});var St=l(P);We=o(St,"Wiener Moderne"),St.forEach(t),ze=o(A,"? Then why stay within the confines of just one or two famous museums, when other, smaller, museums might house some lesser known treasures, too?"),A.forEach(t),ne=d(e),U=n(e,"H2",{});var Mt=l(U);Le=o(Mt,"Similar or Not?"),Mt.forEach(t),le=d(e),I=n(e,"P",{});var ke=l(I);qe=o(ke,"The big question is, of course: what "),ae=n(ke,"EM",{});var Pt=l(ae);$e=o(Pt,"does"),Pt.forEach(t),Ce=o(ke," make two artworks similar? And how do we even get enough of the right data to teach a machine to mimic our understanding of similarity? Previous approaches have been looking, for example, at similar colours. Or they used artificial intelligence to detect common objects in the artworks. But would you necessarily consider two artworks similar just because they both use yellow as their primary color? Or because they both depict flowers?"),ke.forEach(t),he=d(e),_=n(e,"P",{});var V=l(_);Fe=o(V,"In LiviaAI, we want to take a different approach. Instead of coming up with our own metrics for similarity, or relying on technical properties like color, we want to leverage the existing knowledge that museum curators have accumulated in their collections over many years. In order to teach computers how to recognize similar "),re=n(V,"EM",{});var jt=l(re);Ne=o(jt,"images"),jt.forEach(t),De=o(V,", we first want to understand how curators have been describing them - and search for similarity in these "),oe=n(V,"EM",{});var Bt=l(oe);Ue=o(Bt,"descriptions"),Bt.forEach(t),Ge=o(V,"."),V.forEach(t),ce=d(e),T=n(e,"P",{});var xe=l(T);He=o(xe,"Once we have identified artworks that are described in similar terms, we will use the images as examples to train the algorithm. This is also called "),j=n(xe,"A",{href:!0,rel:!0});var Rt=l(j);Ke=o(Rt,"representation or feature learning"),Rt.forEach(t),Ye=o(xe,", because the algorithm learns - by itself - how the representation of similiarity manifests itself in the images."),xe.forEach(t),ue=d(e),G=n(e,"H2",{});var Ot=l(G);Je=o(Ot,"Understanding Our Partner Collections"),Ot.forEach(t),fe=d(e),H=n(e,"P",{});var Wt=l(H);Qe=o(Wt,"The first step in our journey is therefore to gain an understanding of our partner collections. What\u2019s actually inside them? What information have curators added to the items as metadata? And how can we translate all this existing knowledge (and years of work!) into data that can teach computers to recognize similar art?"),Wt.forEach(t),me=d(e),v=n(e,"P",{});var M=l(v);Ve=o(M,"Our three partners, the "),B=n(M,"A",{href:!0,rel:!0});var zt=l(B);Xe=o(zt,"Belvedere"),zt.forEach(t),Ze=o(M,", the "),R=n(M,"A",{href:!0,rel:!0});var Lt=l(R);et=o(Lt,"MAK"),Lt.forEach(t),tt=o(M," and the "),O=n(M,"A",{href:!0,rel:!0});var qt=l(O);at=o(qt,"Wien Museum"),qt.forEach(t),rt=o(M," have given us access to metadata for all artworks they display in their public online collections. In total, that\u2019s more than 300.000 objects! The metadata includes a mix of information such as: title and description text, subjects keywords and classification terms, artist names, summary information on provenance or exhibition history, information about material, production, places and time periods relevant to the artwork, etc."),M.forEach(t),de=d(e),K=n(e,"P",{});var $t=l(K);ot=o($t,"Each partner uses different documentation practices, and has different priorities when describing their artworks. Properties that are recorded in the MAK collection, for example, may not exist (or be relevant!) in the Belvedere collection. Therefore, figuring out which artworks might be similar - according to what the curators tell us about them in the metadata - is not quite straightforward."),$t.forEach(t),pe=d(e),Y=n(e,"H2",{});var Ct=l(Y);it=o(Ct,"Reading Metadata - From a Distance"),Ct.forEach(t),we=d(e),k=n(e,"P",{});var X=l(k);st=o(X,"Luckily, AI can help us here, too. In LiviaAI, we use a technique called "),W=n(X,"A",{href:!0,rel:!0});var Ft=l(W);nt=o(Ft,"Sentence Embedding"),Ft.forEach(t),lt=o(X," to get a better picture of the structure, themes and topics of our collections. Sentence Embedding is a computational method that transforms written text - such as a sentence or a paragraph - to a "),ie=n(X,"EM",{});var Nt=l(ie);ht=o(Nt,"vector"),Nt.forEach(t),ct=o(X,", a numeric representation that we can treat as a point in space. Sentences that share similar semantics will be located nearby in that vector space, which means we can deduct information about the similarity of two texts simply by measuring the distance between their point representations."),X.forEach(t),ge=d(e),J=n(e,"P",{});var Dt=l(J);ut=o(Dt,"There are different algorithms for creating embeddings. Some start on a blank canvas, meaning there are no pre-trained assumptions about the data. You hand them your dataset (say, the entire text of a novel), and the algorithm will organize the sentences into the vector space so that sentences that use (or are surrounded by) similar vocabulary are closer together."),Dt.forEach(t),ve=d(e),x=n(e,"P",{});var Z=l(x);ft=o(Z,"Other algorithms come with pre-loaded information. In our case, we use "),z=n(Z,"A",{href:!0,rel:!0});var Ut=l(z);mt=o(Ut,"BERT"),Ut.forEach(t),dt=o(Z," an AI language model developed in 2018 by Google researchers, which was subsequently adapted for the purpose of high-performance "),L=n(Z,"A",{href:!0,rel:!0});var Gt=l(L);pt=o(Gt,"sentence embedding"),Gt.forEach(t),wt=o(Z,". The advantage of using a pre-trained language model is that it already carries a large amount of latent knowledge about how words and concepts relate in a language. In simplified terms, the model already encodes the information that a \u201Cpair of boots\u201D is closer in meaning to a \u201Cpair of sneakers\u201D than  \u201Cpair of pants\u201D. It would place \u201Cdrawing\u201D at a certain distance from \u201Cphotograph\u201D. But \u201Cdrawing of a person\u201D might be closer \u201Cphotograph of a person\u201D than \u201Cdrawing\u201D and \u201Cphotograph\u201D alone."),Z.forEach(t),ye=d(e),S=n(e,"P",{});var Ae=l(S);gt=o(Ae,"The idea of using sentence embeddings to organize our metdata first, and then pick training images from the results, was what triggered us to propose the LiviaAI project in the first place. It was tested successfully "),q=n(Ae,"A",{href:!0,rel:!0});var Ht=l(q);vt=o(Ht,"in a different context, and with a slightly different approach by AIT colleague Alexander Schindler and colleagues"),Ht.forEach(t),yt=o(Ae,". Which means we\u2026 sort of\u2026 know it will work. But it all depends significantly on the data - it\u2019s level of detail, how much information each individual record contains, whether curators have used free text vs keywords, whether individual records differ sufficiently or whether information is often sparse and formulaic or repetitive, etc."),Ae.forEach(t),be=d(e),E=n(e,"IFRAME",{src:!0,style:!0});var Xt=l(E);Xt.forEach(t),_e=d(e),$=n(e,"SPAN",{class:!0});var Kt=l($);bt=o(Kt,"Fig. 2. Sentence embeddings for 6,200 metadata records from the online collection of the Wien Museum, projected to 3 dimensions. Color represents a distinct combination of classifications assigned by the curators."),Kt.forEach(t),this.h()},h(){u(w,"href","#"),u(N,"href","#"),u(D,"href","2022-04-hello-world"),u(P,"href","https://en.wikipedia.org/wiki/Wiener_Moderne"),u(P,"rel","nofollow"),u(j,"href","https://en.wikipedia.org/wiki/Feature_learning"),u(j,"rel","nofollow"),u(B,"href","https://www.belvedere.at/"),u(B,"rel","nofollow"),u(R,"href","https://www.mak.at"),u(R,"rel","nofollow"),u(O,"href","https://www.wienmuseum.at/"),u(O,"rel","nofollow"),u(W,"href","https://en.wikipedia.org/wiki/Sentence_embedding"),u(W,"rel","nofollow"),u(z,"href","https://en.wikipedia.org/wiki/BERT_(language_model)"),u(z,"rel","nofollow"),u(L,"href","https://arxiv.org/abs/1908.10084"),u(L,"rel","nofollow"),u(q,"href","https://arxiv.org/pdf/2003.12265.pdf"),u(q,"rel","nofollow"),ha(E.src,kt="/embeds/blog/2022-04/embeddings-example.html")||u(E,"src",kt),Qt(E,"width","800px"),Qt(E,"height","600px"),u($,"class","image-caption")},m(e,i){h(e,c,i),a(c,y),h(e,b,i),h(e,p,i),a(p,f),a(p,w),a(w,F),a(p,Ee),a(p,N),a(N,Ie),a(p,Te),h(e,se,i),h(e,g,i),a(g,Se),a(g,D),a(D,Me),a(g,Pe),a(g,ee),a(ee,je),a(g,Be),a(g,te),a(te,Re),a(g,Oe),a(g,P),a(P,We),a(g,ze),h(e,ne,i),h(e,U,i),a(U,Le),h(e,le,i),h(e,I,i),a(I,qe),a(I,ae),a(ae,$e),a(I,Ce),h(e,he,i),h(e,_,i),a(_,Fe),a(_,re),a(re,Ne),a(_,De),a(_,oe),a(oe,Ue),a(_,Ge),h(e,ce,i),h(e,T,i),a(T,He),a(T,j),a(j,Ke),a(T,Ye),h(e,ue,i),h(e,G,i),a(G,Je),h(e,fe,i),h(e,H,i),a(H,Qe),h(e,me,i),h(e,v,i),a(v,Ve),a(v,B),a(B,Xe),a(v,Ze),a(v,R),a(R,et),a(v,tt),a(v,O),a(O,at),a(v,rt),h(e,de,i),h(e,K,i),a(K,ot),h(e,pe,i),h(e,Y,i),a(Y,it),h(e,we,i),h(e,k,i),a(k,st),a(k,W),a(W,nt),a(k,lt),a(k,ie),a(ie,ht),a(k,ct),h(e,ge,i),h(e,J,i),a(J,ut),h(e,ve,i),h(e,x,i),a(x,ft),a(x,z),a(z,mt),a(x,dt),a(x,L),a(L,pt),a(x,wt),h(e,ye,i),h(e,S,i),a(S,gt),a(S,q),a(q,vt),a(S,yt),h(e,be,i),h(e,E,i),h(e,_e,i),h(e,$,i),a($,bt)},d(e){e&&t(c),e&&t(b),e&&t(p),e&&t(se),e&&t(g),e&&t(ne),e&&t(U),e&&t(le),e&&t(I),e&&t(he),e&&t(_),e&&t(ce),e&&t(T),e&&t(ue),e&&t(G),e&&t(fe),e&&t(H),e&&t(me),e&&t(v),e&&t(de),e&&t(K),e&&t(pe),e&&t(Y),e&&t(we),e&&t(k),e&&t(ge),e&&t(J),e&&t(ve),e&&t(x),e&&t(ye),e&&t(S),e&&t(be),e&&t(E),e&&t(_e),e&&t($)}}}function fa(C){let c,y;const b=[C[0],Vt];let p={$$slots:{default:[ua]},$$scope:{ctx:C}};for(let f=0;f<b.length;f+=1)p=_t(p,b[f]);return c=new ca({props:p}),{c(){aa(c.$$.fragment)},l(f){ra(c.$$.fragment,f)},m(f,w){oa(c,f,w),y=!0},p(f,[w]){const F=w&1?ia(b,[w&1&&Yt(f[0]),w&0&&Yt(Vt)]):{};w&2&&(F.$$scope={dirty:w,ctx:f}),c.$set(F)},i(f){y||(sa(c.$$.fragment,f),y=!0)},o(f){na(c.$$.fragment,f),y=!1},d(f){la(c,f)}}}const Vt={title:"Machines Reading Metadata",description:"It's time for the first update from the tech team! The tech team, that's us: intern Bernhard, student of Artificial Intelligence at the University of Linz, and me, Rainer, Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology.",url:"https://liviaai.at/blog/2022-04-machines-reading-metadata"};function ma(C,c,y){return C.$$set=b=>{y(0,c=_t(_t({},c),Jt(b)))},c=Jt(c),[c]}class wa extends Zt{constructor(c){super();ea(this,c,ma,fa,ta,{})}}export{wa as default,Vt as metadata};
