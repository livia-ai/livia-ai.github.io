import{S as $a,i as Na,s as Ka,C as ta,w as Ga,x as Ua,y as Va,z as Qa,A as Da,q as Ja,o as Xa,B as Ya,Q as Fa,e as i,t as o,k as d,c as s,a as n,h as r,d as a,m as u,b as c,O as Za,f as Ca,g as h,H as t}from"../../chunks/vendor-f435face.js";import{P as eo}from"../../chunks/_post-4f5578a2.js";function to(Q){let f,b,y,O,m,p,J,Ke,ve,w,Ge,X,Ue,Ve,ce,Qe,Je,fe,Xe,Ye,R,Ze,et,ye,Y,tt,be,T,at,de,ot,rt,_e,_,it,ue,st,nt,me,lt,ht,ke,I,ct,z,ft,dt,Ee,Z,ut,xe,ee,mt,Ae,v,pt,L,wt,gt,D,vt,yt,F,bt,_t,Te,te,kt,Ie,ae,Et,Se,k,xt,C,At,Tt,pe,It,St,Pe,g,Pt,H,Bt,Wt,q,Mt,jt,$,Ot,Rt,N,zt,Lt,Be,oe,Dt,We,S,Ft,K,Ct,Ht,Me,A,aa,je,G,qt,Oe,P,$t,U,Nt,Kt,Re,re,Gt,ze,V,ie,Ut,Le,B,W,we,Vt,Qt,se,Jt,Xt,M,ge,Yt,Zt,ne,ea;return{c(){f=i("p"),b=o("It\u2019s time for the first update from the tech team! The tech team, that\u2019s us: intern "),y=i("strong"),O=o("Bernhard"),m=o(", student of Artificial Intelligence at the University of Linz, and me, "),p=i("a"),J=o("Rainer"),Ke=o(", Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology."),ve=d(),w=i("p"),Ge=o("As we explained in our "),X=i("a"),Ue=o("introductory post"),Ve=o(", one of the goals of LiviaAI is to find out if we can teach computers to recognize \u201Csimilarity\u201D of artworks. Why? For two reasons: first, because this will allow museums in the future to "),ce=i("strong"),Qe=o("connect their collections to those of other museums more easily"),Je=o(". Computers can handle most of the tedious, time-consuming work of sorting through thousands of artworks, and finding relevant related material in other museums, thus saving museum curators many hours of their valuable time. Second, we believe that these new connections will enable "),fe=i("strong"),Xe=o("new forms of online museum experiences that cross institutional boundaries"),Ye=o(". Interested in the "),R=i("a"),Ze=o("Wiener Moderne"),et=o("? Then why stay within the confines of just one or two famous museums, when other, smaller, museums might house some lesser known treasures, too?"),ye=d(),Y=i("h2"),tt=o("Similar or Not?"),be=d(),T=i("p"),at=o("The big question is, of course: what "),de=i("em"),ot=o("does"),rt=o(" make two artworks similar? And how do we even get enough of the right data to teach a machine to mimic our understanding of similarity? Previous approaches have been looking, for example, at similar colours. Or they used artificial intelligence to detect common objects in the artworks. But would you necessarily consider two artworks similar just because they both use yellow as their primary color? Or because they both depict flowers?"),_e=d(),_=i("p"),it=o("In LiviaAI, we want to take a different approach. Instead of coming up with our own metrics for similarity, or relying on technical properties like color, we want to leverage the existing knowledge that museum curators have accumulated in their collections over many years. In order to teach computers how to recognize similar "),ue=i("em"),st=o("images"),nt=o(", we first want to understand how curators have been describing them - and search for similarity in these "),me=i("em"),lt=o("descriptions"),ht=o("."),ke=d(),I=i("p"),ct=o("Once we have identified artworks that are described in similar terms, we will use the images as examples to train the algorithm. This is also called "),z=i("a"),ft=o("representation or feature learning"),dt=o(", because the algorithm learns - by itself - how the representation of similiarity manifests itself in the images."),Ee=d(),Z=i("h2"),ut=o("Understanding Our Partner Collections"),xe=d(),ee=i("p"),mt=o("The first step in our journey is therefore to gain an understanding of our partner collections. What\u2019s inside them? What information have curators added to the items as metadata? And how can we translate all this existing knowledge (and years of work!) into data that can teach computers to recognize similar art?"),Ae=d(),v=i("p"),pt=o("Our three partners, the "),L=i("a"),wt=o("Belvedere"),gt=o(", the "),D=i("a"),vt=o("MAK"),yt=o(" and the "),F=i("a"),bt=o("Wien Museum"),_t=o(" have given us access to metadata for all artworks they display in their public online collections. In total, that\u2019s more than 300.000 objects! The metadata includes a mix of information such as: title and description text, subjects keywords and classification terms, artist names, summary information on provenance or exhibition history, information about material, production, places and time periods relevant to the artwork, etc."),Te=d(),te=i("p"),kt=o("Each partner uses different documentation practices, and has different priorities when describing their artworks. Properties that are recorded in the MAK collection, for example, may not exist (or be relevant!) in the Belvedere collection. Therefore, figuring out which artworks might be similar - according to what the metadata says - is not as straightforward as one might hope."),Ie=d(),ae=i("h2"),Et=o("Reading Metadata - From a Distance"),Se=d(),k=i("p"),xt=o("Luckily, AI can help us here, too. In LiviaAI, we use a technique called "),C=i("a"),At=o("Sentence Embedding"),Tt=o(" to get a better picture of the structure, themes and topics of our collections. Sentence Embedding is a computational method that transforms written text - such as a sentence or a paragraph - to a "),pe=i("em"),It=o("vector"),St=o(", a numeric representation that we can treat as a point in space. Sentences that share similar semantics will be located nearby in that space, which means we can deduct information about the similarity of two texts simply by measuring the distance between them."),Pe=d(),g=i("p"),Pt=o("There are different ways to compute embeddings. Some algorithms (like "),H=i("a"),Bt=o("LSI"),Wt=o(" or "),q=i("a"),Mt=o("Doc2Vec"),jt=o(") start from a blank state, with no prior knowledge of language or vocabulary. They take the full dataset as input (say, the fulltext of a novel), and fit the sentence representations so that sentences that use (or are surrounded by) similar vocabulary will end up close together. Other approaches start from pre-trained models, which means they will already come pre-loaded with knowledge trained from a large text corpus. In our case, we use "),$=i("a"),Ot=o("BERT"),Rt=o(" a large language model developed in 2018 by Google researchers, which was shortly after adapted for the purpose of high-performance "),N=i("a"),zt=o("sentence embedding"),Lt=o("."),Be=d(),oe=i("p"),Dt=o("The advantage of a pre-trained model is that it already encodes a lot of language context. In simplified terms, BERT can already tell you that a \u201Cpair of boots\u201D is closer in meaning to a \u201Cpair of sneakers\u201D than a \u201Cpair of pants\u201D. The terms for \u201Cpencil drawing\u201D would have a certain distance from \u201Cphotograph\u201D. But the distance between a \u201Cpencil drawing of a person\u201D and a \u201Cphotograph of a person\u201D would be smaller."),We=d(),S=i("p"),Ft=o("Here\u2019s an example for how BERT grants us a new perspective on our data. The diagram below visualizes 6.200 records from the Wien Museum. (That\u2019s only about 10% of their total collection. But it helps to make the diagram load a bit faster in this blogpost.) Each metadata record from the collection is represented as a point in 3D space"),K=i("a"),Ct=o("1"),Ht=o(". We have colored the dots according to the categories that curators have assigned them in the collection management system. This means we\u2019d expect a to see a pattern where dots of similar color should form clusters. And - luckily - that\u2019s the case. The diagram is interactive! Try zooming/panning with mouse or touch, and explore the clusters that have emerged."),Me=d(),A=i("iframe"),je=d(),G=i("span"),qt=o("Sentence embeddings for 6,200 metadata records from the online collection of the Wien Museum. Color represents a distinct combination of classifications assigned by the curators."),Oe=d(),P=i("p"),$t=o("We are currently sifting through our data, and are starting to draw samples of \u201Csimilar\u201D and \u201Cdifferent\u201D images to get a better grip on the possiblities and limitations of the approach. Picking training data based on sentence embeddings is an idea that was initially developed - and tested successfully - "),U=i("a"),Nt=o("in a different context by AIT colleague Alexander Schindler et al."),Kt=o(", who also inspired and advised on the preparation of this project. Which means we are\u2026 sort of\u2026 confident that this will work. But it\u2019s all crucially dependent on the data - quality, level of detail, whether curators have used free text vs. keywords, whether individual records differ sufficiently from each other, or whether information is often sparse, formulaic or repetitive, etc."),Re=d(),re=i("p"),Gt=o("For now, the goal is only to prepare enough material for discussion at our upcoming workshop. But our journey is guaranteed to remain exciting!"),ze=d(),V=i("ol"),ie=i("li"),Ut=o("For the sake of completeness: sentence embeddings work in higher dimensional space. In our case, for example, we compute clusters and distances in 50 dimensions. I.e. technically, what you see in the diagram are 50-dimensional embeddings projected to three dimensions for the purpose of visualization. This also means that the 3D visualization is only an approximation and isn't always able to capture the true geometry of the cluster patterns."),Le=d(),B=i("footer"),W=i("div"),we=i("h4"),Vt=o("Next post"),Qt=d(),se=i("a"),Jt=o("Community and Data - The Kick-Off Workshop"),Xt=d(),M=i("div"),ge=i("h4"),Yt=o("Previous post"),Zt=d(),ne=i("a"),ea=o("Hello World!"),this.h()},l(e){f=s(e,"P",{});var l=n(f);b=r(l,"It\u2019s time for the first update from the tech team! The tech team, that\u2019s us: intern "),y=s(l,"STRONG",{});var oa=n(y);O=r(oa,"Bernhard"),oa.forEach(a),m=r(l,", student of Artificial Intelligence at the University of Linz, and me, "),p=s(l,"A",{href:!0,rel:!0});var ra=n(p);J=r(ra,"Rainer"),ra.forEach(a),Ke=r(l,", Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology."),l.forEach(a),ve=u(e),w=s(e,"P",{});var E=n(w);Ge=r(E,"As we explained in our "),X=s(E,"A",{href:!0});var ia=n(X);Ue=r(ia,"introductory post"),ia.forEach(a),Ve=r(E,", one of the goals of LiviaAI is to find out if we can teach computers to recognize \u201Csimilarity\u201D of artworks. Why? For two reasons: first, because this will allow museums in the future to "),ce=s(E,"STRONG",{});var sa=n(ce);Qe=r(sa,"connect their collections to those of other museums more easily"),sa.forEach(a),Je=r(E,". Computers can handle most of the tedious, time-consuming work of sorting through thousands of artworks, and finding relevant related material in other museums, thus saving museum curators many hours of their valuable time. Second, we believe that these new connections will enable "),fe=s(E,"STRONG",{});var na=n(fe);Xe=r(na,"new forms of online museum experiences that cross institutional boundaries"),na.forEach(a),Ye=r(E,". Interested in the "),R=s(E,"A",{href:!0,rel:!0});var la=n(R);Ze=r(la,"Wiener Moderne"),la.forEach(a),et=r(E,"? Then why stay within the confines of just one or two famous museums, when other, smaller, museums might house some lesser known treasures, too?"),E.forEach(a),ye=u(e),Y=s(e,"H2",{});var ha=n(Y);tt=r(ha,"Similar or Not?"),ha.forEach(a),be=u(e),T=s(e,"P",{});var De=n(T);at=r(De,"The big question is, of course: what "),de=s(De,"EM",{});var ca=n(de);ot=r(ca,"does"),ca.forEach(a),rt=r(De," make two artworks similar? And how do we even get enough of the right data to teach a machine to mimic our understanding of similarity? Previous approaches have been looking, for example, at similar colours. Or they used artificial intelligence to detect common objects in the artworks. But would you necessarily consider two artworks similar just because they both use yellow as their primary color? Or because they both depict flowers?"),De.forEach(a),_e=u(e),_=s(e,"P",{});var le=n(_);it=r(le,"In LiviaAI, we want to take a different approach. Instead of coming up with our own metrics for similarity, or relying on technical properties like color, we want to leverage the existing knowledge that museum curators have accumulated in their collections over many years. In order to teach computers how to recognize similar "),ue=s(le,"EM",{});var fa=n(ue);st=r(fa,"images"),fa.forEach(a),nt=r(le,", we first want to understand how curators have been describing them - and search for similarity in these "),me=s(le,"EM",{});var da=n(me);lt=r(da,"descriptions"),da.forEach(a),ht=r(le,"."),le.forEach(a),ke=u(e),I=s(e,"P",{});var Fe=n(I);ct=r(Fe,"Once we have identified artworks that are described in similar terms, we will use the images as examples to train the algorithm. This is also called "),z=s(Fe,"A",{href:!0,rel:!0});var ua=n(z);ft=r(ua,"representation or feature learning"),ua.forEach(a),dt=r(Fe,", because the algorithm learns - by itself - how the representation of similiarity manifests itself in the images."),Fe.forEach(a),Ee=u(e),Z=s(e,"H2",{});var ma=n(Z);ut=r(ma,"Understanding Our Partner Collections"),ma.forEach(a),xe=u(e),ee=s(e,"P",{});var pa=n(ee);mt=r(pa,"The first step in our journey is therefore to gain an understanding of our partner collections. What\u2019s inside them? What information have curators added to the items as metadata? And how can we translate all this existing knowledge (and years of work!) into data that can teach computers to recognize similar art?"),pa.forEach(a),Ae=u(e),v=s(e,"P",{});var j=n(v);pt=r(j,"Our three partners, the "),L=s(j,"A",{href:!0,rel:!0});var wa=n(L);wt=r(wa,"Belvedere"),wa.forEach(a),gt=r(j,", the "),D=s(j,"A",{href:!0,rel:!0});var ga=n(D);vt=r(ga,"MAK"),ga.forEach(a),yt=r(j," and the "),F=s(j,"A",{href:!0,rel:!0});var va=n(F);bt=r(va,"Wien Museum"),va.forEach(a),_t=r(j," have given us access to metadata for all artworks they display in their public online collections. In total, that\u2019s more than 300.000 objects! The metadata includes a mix of information such as: title and description text, subjects keywords and classification terms, artist names, summary information on provenance or exhibition history, information about material, production, places and time periods relevant to the artwork, etc."),j.forEach(a),Te=u(e),te=s(e,"P",{});var ya=n(te);kt=r(ya,"Each partner uses different documentation practices, and has different priorities when describing their artworks. Properties that are recorded in the MAK collection, for example, may not exist (or be relevant!) in the Belvedere collection. Therefore, figuring out which artworks might be similar - according to what the metadata says - is not as straightforward as one might hope."),ya.forEach(a),Ie=u(e),ae=s(e,"H2",{});var ba=n(ae);Et=r(ba,"Reading Metadata - From a Distance"),ba.forEach(a),Se=u(e),k=s(e,"P",{});var he=n(k);xt=r(he,"Luckily, AI can help us here, too. In LiviaAI, we use a technique called "),C=s(he,"A",{href:!0,rel:!0});var _a=n(C);At=r(_a,"Sentence Embedding"),_a.forEach(a),Tt=r(he," to get a better picture of the structure, themes and topics of our collections. Sentence Embedding is a computational method that transforms written text - such as a sentence or a paragraph - to a "),pe=s(he,"EM",{});var ka=n(pe);It=r(ka,"vector"),ka.forEach(a),St=r(he,", a numeric representation that we can treat as a point in space. Sentences that share similar semantics will be located nearby in that space, which means we can deduct information about the similarity of two texts simply by measuring the distance between them."),he.forEach(a),Pe=u(e),g=s(e,"P",{});var x=n(g);Pt=r(x,"There are different ways to compute embeddings. Some algorithms (like "),H=s(x,"A",{href:!0,rel:!0});var Ea=n(H);Bt=r(Ea,"LSI"),Ea.forEach(a),Wt=r(x," or "),q=s(x,"A",{href:!0,rel:!0});var xa=n(q);Mt=r(xa,"Doc2Vec"),xa.forEach(a),jt=r(x,") start from a blank state, with no prior knowledge of language or vocabulary. They take the full dataset as input (say, the fulltext of a novel), and fit the sentence representations so that sentences that use (or are surrounded by) similar vocabulary will end up close together. Other approaches start from pre-trained models, which means they will already come pre-loaded with knowledge trained from a large text corpus. In our case, we use "),$=s(x,"A",{href:!0,rel:!0});var Aa=n($);Ot=r(Aa,"BERT"),Aa.forEach(a),Rt=r(x," a large language model developed in 2018 by Google researchers, which was shortly after adapted for the purpose of high-performance "),N=s(x,"A",{href:!0,rel:!0});var Ta=n(N);zt=r(Ta,"sentence embedding"),Ta.forEach(a),Lt=r(x,"."),x.forEach(a),Be=u(e),oe=s(e,"P",{});var Ia=n(oe);Dt=r(Ia,"The advantage of a pre-trained model is that it already encodes a lot of language context. In simplified terms, BERT can already tell you that a \u201Cpair of boots\u201D is closer in meaning to a \u201Cpair of sneakers\u201D than a \u201Cpair of pants\u201D. The terms for \u201Cpencil drawing\u201D would have a certain distance from \u201Cphotograph\u201D. But the distance between a \u201Cpencil drawing of a person\u201D and a \u201Cphotograph of a person\u201D would be smaller."),Ia.forEach(a),We=u(e),S=s(e,"P",{});var Ce=n(S);Ft=r(Ce,"Here\u2019s an example for how BERT grants us a new perspective on our data. The diagram below visualizes 6.200 records from the Wien Museum. (That\u2019s only about 10% of their total collection. But it helps to make the diagram load a bit faster in this blogpost.) Each metadata record from the collection is represented as a point in 3D space"),K=s(Ce,"A",{class:!0,href:!0});var Sa=n(K);Ct=r(Sa,"1"),Sa.forEach(a),Ht=r(Ce,". We have colored the dots according to the categories that curators have assigned them in the collection management system. This means we\u2019d expect a to see a pattern where dots of similar color should form clusters. And - luckily - that\u2019s the case. The diagram is interactive! Try zooming/panning with mouse or touch, and explore the clusters that have emerged."),Ce.forEach(a),Me=u(e),A=s(e,"IFRAME",{src:!0,style:!0});var qa=n(A);qa.forEach(a),je=u(e),G=s(e,"SPAN",{class:!0});var Pa=n(G);qt=r(Pa,"Sentence embeddings for 6,200 metadata records from the online collection of the Wien Museum. Color represents a distinct combination of classifications assigned by the curators."),Pa.forEach(a),Oe=u(e),P=s(e,"P",{});var He=n(P);$t=r(He,"We are currently sifting through our data, and are starting to draw samples of \u201Csimilar\u201D and \u201Cdifferent\u201D images to get a better grip on the possiblities and limitations of the approach. Picking training data based on sentence embeddings is an idea that was initially developed - and tested successfully - "),U=s(He,"A",{href:!0,rel:!0});var Ba=n(U);Nt=r(Ba,"in a different context by AIT colleague Alexander Schindler et al."),Ba.forEach(a),Kt=r(He,", who also inspired and advised on the preparation of this project. Which means we are\u2026 sort of\u2026 confident that this will work. But it\u2019s all crucially dependent on the data - quality, level of detail, whether curators have used free text vs. keywords, whether individual records differ sufficiently from each other, or whether information is often sparse, formulaic or repetitive, etc."),He.forEach(a),Re=u(e),re=s(e,"P",{});var Wa=n(re);Gt=r(Wa,"For now, the goal is only to prepare enough material for discussion at our upcoming workshop. But our journey is guaranteed to remain exciting!"),Wa.forEach(a),ze=u(e),V=s(e,"OL",{class:!0});var Ma=n(V);ie=s(Ma,"LI",{id:!0});var ja=n(ie);Ut=r(ja,"For the sake of completeness: sentence embeddings work in higher dimensional space. In our case, for example, we compute clusters and distances in 50 dimensions. I.e. technically, what you see in the diagram are 50-dimensional embeddings projected to three dimensions for the purpose of visualization. This also means that the 3D visualization is only an approximation and isn't always able to capture the true geometry of the cluster patterns."),ja.forEach(a),Ma.forEach(a),Le=u(e),B=s(e,"FOOTER",{});var qe=n(B);W=s(qe,"DIV",{class:!0});var $e=n(W);we=s($e,"H4",{});var Oa=n(we);Vt=r(Oa,"Next post"),Oa.forEach(a),Qt=u($e),se=s($e,"A",{href:!0});var Ra=n(se);Jt=r(Ra,"Community and Data - The Kick-Off Workshop"),Ra.forEach(a),$e.forEach(a),Xt=u(qe),M=s(qe,"DIV",{class:!0});var Ne=n(M);ge=s(Ne,"H4",{});var za=n(ge);Yt=r(za,"Previous post"),za.forEach(a),Zt=u(Ne),ne=s(Ne,"A",{href:!0});var La=n(ne);ea=r(La,"Hello World!"),La.forEach(a),Ne.forEach(a),qe.forEach(a),this.h()},h(){c(p,"href","https://rsimon.github.io"),c(p,"rel","nofollow"),c(X,"href","/blog/2022-04-hello-world"),c(R,"href","https://en.wikipedia.org/wiki/Wiener_Moderne"),c(R,"rel","nofollow"),c(z,"href","https://en.wikipedia.org/wiki/Feature_learning"),c(z,"rel","nofollow"),c(L,"href","https://www.belvedere.at/"),c(L,"rel","nofollow"),c(D,"href","https://www.mak.at"),c(D,"rel","nofollow"),c(F,"href","https://www.wienmuseum.at/"),c(F,"rel","nofollow"),c(C,"href","https://en.wikipedia.org/wiki/Sentence_embedding"),c(C,"rel","nofollow"),c(H,"href","https://en.wikipedia.org/wiki/Latent_semantic_analysis"),c(H,"rel","nofollow"),c(q,"href","https://medium.com/wisio/a-gentle-introduction-to-doc2vec-db3e8c0cce5e"),c(q,"rel","nofollow"),c($,"href","https://en.wikipedia.org/wiki/BERT_(language_model)"),c($,"rel","nofollow"),c(N,"href","https://arxiv.org/abs/1908.10084"),c(N,"rel","nofollow"),c(K,"class","footnote"),c(K,"href","#footnote-1"),Za(A.src,aa="/embeds/blog/2022-04/embeddings-example.html")||c(A,"src",aa),Ca(A,"width","800px"),Ca(A,"height","600px"),c(G,"class","image-caption centered"),c(U,"href","https://arxiv.org/pdf/2003.12265.pdf"),c(U,"rel","nofollow"),c(ie,"id","footnote-1"),c(V,"class","footnotes"),c(se,"href","/blog/2022-05-community-data"),c(W,"class","next-post"),c(ne,"href","/blog/2022-04-hello-world"),c(M,"class","previous-post")},m(e,l){h(e,f,l),t(f,b),t(f,y),t(y,O),t(f,m),t(f,p),t(p,J),t(f,Ke),h(e,ve,l),h(e,w,l),t(w,Ge),t(w,X),t(X,Ue),t(w,Ve),t(w,ce),t(ce,Qe),t(w,Je),t(w,fe),t(fe,Xe),t(w,Ye),t(w,R),t(R,Ze),t(w,et),h(e,ye,l),h(e,Y,l),t(Y,tt),h(e,be,l),h(e,T,l),t(T,at),t(T,de),t(de,ot),t(T,rt),h(e,_e,l),h(e,_,l),t(_,it),t(_,ue),t(ue,st),t(_,nt),t(_,me),t(me,lt),t(_,ht),h(e,ke,l),h(e,I,l),t(I,ct),t(I,z),t(z,ft),t(I,dt),h(e,Ee,l),h(e,Z,l),t(Z,ut),h(e,xe,l),h(e,ee,l),t(ee,mt),h(e,Ae,l),h(e,v,l),t(v,pt),t(v,L),t(L,wt),t(v,gt),t(v,D),t(D,vt),t(v,yt),t(v,F),t(F,bt),t(v,_t),h(e,Te,l),h(e,te,l),t(te,kt),h(e,Ie,l),h(e,ae,l),t(ae,Et),h(e,Se,l),h(e,k,l),t(k,xt),t(k,C),t(C,At),t(k,Tt),t(k,pe),t(pe,It),t(k,St),h(e,Pe,l),h(e,g,l),t(g,Pt),t(g,H),t(H,Bt),t(g,Wt),t(g,q),t(q,Mt),t(g,jt),t(g,$),t($,Ot),t(g,Rt),t(g,N),t(N,zt),t(g,Lt),h(e,Be,l),h(e,oe,l),t(oe,Dt),h(e,We,l),h(e,S,l),t(S,Ft),t(S,K),t(K,Ct),t(S,Ht),h(e,Me,l),h(e,A,l),h(e,je,l),h(e,G,l),t(G,qt),h(e,Oe,l),h(e,P,l),t(P,$t),t(P,U),t(U,Nt),t(P,Kt),h(e,Re,l),h(e,re,l),t(re,Gt),h(e,ze,l),h(e,V,l),t(V,ie),t(ie,Ut),h(e,Le,l),h(e,B,l),t(B,W),t(W,we),t(we,Vt),t(W,Qt),t(W,se),t(se,Jt),t(B,Xt),t(B,M),t(M,ge),t(ge,Yt),t(M,Zt),t(M,ne),t(ne,ea)},d(e){e&&a(f),e&&a(ve),e&&a(w),e&&a(ye),e&&a(Y),e&&a(be),e&&a(T),e&&a(_e),e&&a(_),e&&a(ke),e&&a(I),e&&a(Ee),e&&a(Z),e&&a(xe),e&&a(ee),e&&a(Ae),e&&a(v),e&&a(Te),e&&a(te),e&&a(Ie),e&&a(ae),e&&a(Se),e&&a(k),e&&a(Pe),e&&a(g),e&&a(Be),e&&a(oe),e&&a(We),e&&a(S),e&&a(Me),e&&a(A),e&&a(je),e&&a(G),e&&a(Oe),e&&a(P),e&&a(Re),e&&a(re),e&&a(ze),e&&a(V),e&&a(Le),e&&a(B)}}}function ao(Q){let f,b;const y=[Q[0],Ha];let O={$$slots:{default:[to]},$$scope:{ctx:Q}};for(let m=0;m<y.length;m+=1)O=ta(O,y[m]);return f=new eo({props:O}),{c(){Ga(f.$$.fragment)},l(m){Ua(f.$$.fragment,m)},m(m,p){Va(f,m,p),b=!0},p(m,[p]){const J=p&1?Qa(y,[p&1&&Da(m[0]),p&0&&Da(Ha)]):{};p&2&&(J.$$scope={dirty:p,ctx:m}),f.$set(J)},i(m){b||(Ja(f.$$.fragment,m),b=!0)},o(m){Xa(f.$$.fragment,m),b=!1},d(m){Ya(f,m)}}}const Ha={title:"Machines Reading Metadata",description:"It's time for the first update from the tech team! The tech team, that's us: intern Bernhard, student of Artificial Intelligence at the University of Linz, and me, Rainer, Senior Researcher at the Data Science & Artificial Intelligence group at the Austrian Institute of Technology.",url:"https://liviaai.at/blog/2022-04-machines-reading-metadata",date:"April 26, 2022"};function oo(Q,f,b){return Q.$$set=y=>{b(0,f=ta(ta({},f),Fa(y)))},f=Fa(f),[f]}class so extends $a{constructor(f){super();Na(this,f,oo,ao,Ka,{})}}export{so as default,Ha as metadata};
